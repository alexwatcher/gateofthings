services:
    otel-collector:
        image: otel/opentelemetry-collector-contrib:0.129.1
        container_name: otel-collector
        command: --config=/etc/otel-collector-config.yaml
        volumes:
            - ./configs/otel-collector-config.yaml:/etc/otel-collector-config.yaml
            - ./logs/otel-collector:/var/log/otel_collector
        ports:
            - 1888:1888   # pprof extension
            - 8888:8888   # Prometheus metrics exposed by the Collector
            - 8889:8889   # Prometheus exporter metrics
            - 13133:13133 # health_check extension
            - 4317:4317   # OTLP gRPC receiver
            - 4318:4318   # OTLP http receiver
            - 55679:55679 # zpages extension
    
    loki:
        image: grafana/loki:3.5.1
        container_name: loki
        command: -config.file=/etc/loki/loki-config.yaml
        volumes:
            - ./configs/loki-config.yaml:/etc/loki/loki-config.yaml
    
    tempo:
        image: grafana/tempo:2.8.1
        container_name: tempo
        command: -config.file=/etc/tempo-config.yaml
        volumes:
            - ./configs/tempo-config.yaml:/etc/tempo-config.yaml
    
    prometheus:
        image: prom/prometheus:v3.5.0
        container_name: prometheus
        volumes:
            - "./configs/prometheus-config.yaml:/etc/prometheus/prometheus.yml"
    
    grafana:
        image: grafana/grafana:12.0.2
        container_name: grafana
        environment:
            - GF_AUTH_DISABLE_LOGIN_FORM=true
            - GF_AUTH_ANONYMOUS_ENABLED=true
            - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
        volumes:
            - ./configs/grafana/provisioning:/etc/grafana/provisioning
            - ./configs/grafana/dashboards:/etc/grafana/dashboards
        ports:
            - 3300:3000
    
    postgres:
        image: postgres:17.5
        container_name: postgres
        environment:
            POSTGRES_USER: admin
            POSTGRES_PASSWORD: pass
            POSTGRES_DB: postgres
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "root"]
            interval: 10s
            timeout: 5s
            retries: 5
        ports:
            - 5432:5432

    migration:
        build: ./tools/goose
        container_name: migration
        command: ["up"]
        volumes:
            - ./migrations:/migrations
        environment:
            GOOSE_DRIVER: postgres
            GOOSE_DBSTRING: "host=postgres port=5432 user=admin password=pass dbname=postgres sslmode=disable"
            METRICS_USER: metrics_user
            METRICS_PASS: metrics_pass
            AUTH_USER: auth_user
            AUTH_PASS: auth_pass
        depends_on:
            postgres:
                condition: service_healthy

    postgres-exporter:
        image: quay.io/prometheuscommunity/postgres-exporter:v0.17.1
        container_name: postgres-exporter
        environment:
            DATA_SOURCE_URI: postgres:5432/postgres?sslmode=disable
            DATA_SOURCE_USER: metrics_user
            DATA_SOURCE_PASS: metrics_pass
        depends_on:
            postgres:
                condition: service_healthy
    
####
    auth:
        image: auth:latest
        container_name: auth
        environment:
            ENV: dev
            TOKEN_TTL: 1h
            SECRET: secret
            GRPC_PORT: 50051
            TELEMETRY_TRACE: otel-collector:4317
            TELEMETRY_METRICS: otel-collector:4317
            TELEMETRY_LOGS: otel-collector:4317
            DB_HOST: postgres
            DB_PORT: 5432
            DB_SSL: false
            DB_NAME: postgres
            DB_USER: auth_user
            DB_PASSWORD: auth_pass
            DB_MIGRATIONS: ./migrations
        ports:
            - 50051:50051
        depends_on:
            postgres:
                condition: service_healthy
